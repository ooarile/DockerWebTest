name: Build and Deploy  # 워크플로우의 이름을 설정합니다.

on:
  push:
    branches: [ master ]  # master 브랜치에 푸시될 때 워크플로우가 트리거됩니다.

jobs:
  build:
    runs-on: ubuntu-latest  # 워크플로우가 실행될 환경을 설정합니다. 여기서는 최신 우분투를 사용합니다.

    steps:
    - name: Checkout code  # 코드를 체크아웃하는 단계입니다.
      uses: actions/checkout@v2  # GitHub Actions의 체크아웃 액션을 사용합니다.

    - name: Set up .NET  # .NET 환경을 설정하는 단계입니다.
      uses: actions/setup-dotnet@v2  # .NET 설정 액션을 사용합니다.
      with:
        dotnet-version: '8.0.x'  # 사용할 .NET 버전을 지정합니다.

    - name: Set up Docker Buildx  # Docker Buildx를 설정하는 단계입니다.
      uses: docker/setup-buildx-action@v1  # Docker Buildx 설정 액션을 사용합니다.

    - name: Log in to Docker Hub  # Docker Hub에 로그인하는 단계입니다.
      uses: docker/login-action@v1  # Docker 로그인 액션을 사용합니다.
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub 사용자 이름을 GitHub Secrets에서 가져옵니다.
        password: ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub 비밀번호를 GitHub Secrets에서 가져옵니다.

    - name: Build and push Docker image  # Docker 이미지를 빌드하고 푸시하는 단계입니다.
      uses: docker/build-push-action@v2  # Docker 빌드 및 푸시 액션을 사용합니다.
      with:
        context: ./DockerConsolePractice/DockerConsolePractice  # Docker 빌드 컨텍스트를 설정합니다.
        push: true  # 빌드한 이미지를 Docker Hub에 푸시합니다.
        tags: parkseunghwan/dockerarrangement:latest  # Docker 이미지에 태그를 지정합니다.

    - name: Publish artifacts  # 빌드 산출물을 업로드하는 단계입니다.
      uses: actions/upload-artifact@v3  # 아티팩트 업로드 액션을 사용합니다.
      with:
        name: winforms-app  # 업로드할 아티팩트의 이름을 지정합니다.
        path: ./out  # 업로드할 파일의 경로를 지정합니다.